networks:
  app-network:
    driver: bridge
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    ports:
      - 6001:6001
    env_file:
      - path: ./vault/api.env.development
        required: true
    networks:
      - app-network
    # develop:
    #   watch:
    #     - action: sync
    #       path: ./api
    #       target: /app
    #       ignore:
    #         - node_modules/
    #     - action: rebuild
    #       path: ./api/package.json
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./vault/bot.env.development
    networks:
      - app-network
    develop:
      watch:
        - action: sync
          path: ./bot
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./bot/package.json
  # redis:
  #   image: redis:alpine
  #   restart: always
  #   # ports:
  #   #   - 6379:6379
  #   networks:
  #     - app-network
  mongo:
    image: mongo:4.0-xenial
    restart: always
    volumes:
      - ./mongo-data:/data/db/
    networks:
      - app-network
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./vault/cert.pem:/credentials/cert.pem
      - ./vault/key.pem:/credentials/key.pem
    networks:
      - app-network
    depends_on:
      - api
volumes:
  data:
